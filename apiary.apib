FORMAT: 1A
HOST: http://rs-rbac.herokuapp.com

# Rootstrap RBAC 

Role-based access control for Rootstrap projects.

RBAC restricts access based on a person's role within an organization 
and has become one of the main methods for advanced access control. 

The roles in RBAC refer to the levels of access that users
have in a platform..

## Users [/api/v1/users]

### Create User [POST]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg
    + Attributes
        + user (User External, required)

        
+ Response 200 (application/json)
    
+ Response 400
    + Attributes
        + errors (array[string])
            

### Update user  [PUT]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg

    + Attributes
      + user (User Roles, required)

+ Response 200 (application/json)

### Delete User [DELETE]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg

+ Response 200 (application/json)

## Roles [/api/v1/users/users/roles]
### Get user's roles  [GET]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg

+ Response 200 (application/json)
    + Attributes 
        + roles: (array[Role Base])


## Resources [/api/v1/users/resources]

### Create Resource [POST]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg
    + Attributes
        + resource (Resource Base, required)
        
+ Response 200 (application/json)
    
+ Response 400
    + Attributes
        + errors (array[string])
            

### Get user's resources  [GET]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg

+ Response 200 (application/json)
    + Attributes 
        + resources: (array[Resource Base])


### Delete Resource [DELETE]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: QADgNCWRJj0LyRruqzYbBg
    
    + Attributes
        + resource (Resource Base, required) 
        
+ Response 200 (application/json)


# Data Structures

## Profile Response (object)
+ id: 100 (number)
+ email: test@test.com (string)
+ provider: email, facebook, twitter (enum[string]) - it's way the user logins
+ uid: test@test.com (string) - the provider identifier
+ first_name: John (string)
+ last_name: Doe (string)
+ username: jdoe (string)
+ created_at: 2017-02-23T13:54:33.283Z (string)

## User External (object)
+ external_id: 12 (number)

## Resource Base (object)
+ resource_id: 1 (number)
+ resource_type: form (string)

## Role Base (object)
+ resource: (Resource Base)
+ name: Hiring (string)

## User Roles (object)
+ roles: (array[Role Base])

## User (object)
+ email: test@test.com (string)
+ first_name: John (string)
+ last_name: Doe (string)
+ username: jdoe (string)