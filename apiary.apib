FORMAT: 1A
HOST: http://rs-rbac.herokuapp.com

# Rootstrap RBAC+ 

Role-based access control for Rootstrap projects.

RBAC+ restricts access based on a person's role within an organization 
and has become one of the main methods for advanced access control. 

The roles in RBAC refer to the levels of access that users
have in a platform.

The "+" stands for positive RBAC. We give access to specified resources,
but no access is denied explicitly. 

# Group Roles

# Collection [/api/v1/roles]

## Create a new Role [POST]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8
    + Attributes
        + role (Role Base, required)

        
+ Response 200 (application/json)
    + Attributes
        + role (Role Base, required)
    
+ Response 400
    + Attributes
        + errors (array[string])
            

# Object [/api/v1/roles/{role_id}]

## Delete [DELETE]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8

+ Response 200 (application/json)

## Get Permissions  [GET /permissions]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8

+ Response 200 (application/json)

    + Attributes 
        + permissions (array[Permission])
        

## Assign Permissions [POST /assign?permission_ids={permission_ids}]
+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8
            
    + Parameters
        + permission_ids (string) - Array of permissions IDs to assign. Example: [1, 5, 32]
            
+ Response 200 (application/json)

## Unssign Permissions [POST /unassign?permission_ids={permission_ids}]
+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8
    
    + Parameters
        + permission_ids (string) - Array of permissions IDs to assign. Example: [1, 5, 32]
            
+ Response 200 (application/json)

# Group Users

# Collection [/api/v1/users]

## Create a new User [POST]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8
    + Attributes
        + user (User, required)

        
+ Response 200 (application/json)
    + Attributes
        + user (User, required)
    
+ Response 400
    + Attributes
        + errors (array[string])
            

# Object [/api/v1/users/{user_id}]

## Update [PUT]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8

    + Attributes
      + user (User Roles, required)

+ Response 200 (application/json)

## Delete [DELETE]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8

+ Response 200 (application/json)

## Get Roles  [GET /roles]
+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8

+ Response 200 (application/json)

    + Attributes 
        + roles (array[Role Base])


## Get Permissions  [GET /permissions]

+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8

+ Response 200 (application/json)

    + Attributes 
        + permissions (array[Permission])

# Group Permissions
# Collection [/api/v1/permissions]

## Create [POST]


+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8
            
+ Response 200 (application/json)

    + Attributes
        + permission (Permission, required)
        
## List permissions of Account (admin access only) [GET]


+ Request (application/json)
    + Headers
    
            userId: 12
            api-key: uhduye7385n3bvx73hn31k8
            
+ Response 200 (application/json)

    + Attributes 
        + permissions (array[Permission])

# Data Structures

## Account (object)
+ api_key: uhduye7385n3bvx73hn31k8 (string)

## User (object)
+ external_id: 12 (number)

## Permission (object)
+ access_type: 1 (number)
+ resource (Resource Base)

## Role Permission (object)
+ resource (Resource Base)
+ role (Role Base)

## Resource Base (object)
+ resource_id: 1 (number)
+ resource_type: form (string)

## Role Base (object)
+ name: Hiring (string)
+ permissions_string (string)

## User Roles (object)
+ roles (array[Role Base])